#Core Settings
#Core Settings allows you to change setting that are related to all rendering features.
[core_settings]
	#Count of buffer sets that holds data for in-flight frame rendering.
	#Changing this value may affects your FPS. Smaller value means less in-flight frames, while larger values means more in-flight frames. More in-flight frames means more FPS but more VRAM.
	# Default: 5
	# Range: > 1
	pooled_buffer_set_size = 5
	#Count of batches of RenderTypes that is allowed in a draw call.
	#Changing this value may affects your FPS. Smaller value means less batches allowed in a draw call, while larger values means more batches. More batches means more FPS but more VRAM and more CPU pressure on handling RenderTypes.
	# Default: 32
	# Range: > 1
	pooled_element_buffer_size = 32
	#Count of images that cached for static mesh culling.
	#Changing this value may affects your FPS. Smaller value means less images allowed to be cached, while larger means more cached images. More cached images means more FPS but more RAM pressure.
	# Default: 32
	# Range: > 1
	cached_image_size = 32
	#- DISABLED: Debug context will be disabled, which may cause significant rendering glitches on some NVIDIA cards because of the "theaded optimization".
	#- ENABLED: Debug context will be enabled, which can prevent NVIDIA driver from applying the "threaded optimization" that causes the glitches.
	#Allowed Values: DISABLED, ENABLED
	debug_context = "ENABLED"
	#- DISABLED: Translucent RenderType will fallback to vanilla rendering pipeline if the accelerated pipeline does not support translucent sorting unless mods explicitly enable force translucent acceleration temporarily when rendering their own faces.
	#- ENABLED: Translucent RenderType will still be rendered in accelerated pipeline even if the pipeline does not support translucent sorting unless mods explicitly disable force translucent acceleration temporarily when rendering their own faces.
	#Allowed Values: DISABLED, ENABLED
	force_translucent_acceleration = "DISABLED"
	#- DISABLED: Poses with identical transform matrix and normal matrix that used to transform vertices will not be cached in buffer which slightly decreases CPU pressure but increase VRAM usage unless mods explicitly disable it when rendering.
	#- ENABLED: Poses with identical transform matrix and normal matrix that used to transform vertices will be cached in buffer which save VRAM but slightly increase CPU pressure unless mods explicitly disable it when rendering.
	#Allowed Values: DISABLED, ENABLED
	cache_identical_pose = "ENABLED"

#Accelerated Entity Rendering Settings
#Accelerated Entity Rendering uses GPU to cache and transform vertices while rendering model parts of entities, instead of generating and transforming vertices every time the model parts are rendered in CPU.
[accelerated_entity_rendering]
	#- DISABLED: Disable accelerated entity rendering.
	#- ENABLED: Enable accelerated entity rendering.
	#Allowed Values: DISABLED, ENABLED
	feature_status = "DISABLED"
	#- VANILLA: Entities will not be rendered into the accelerated pipeline unless mods explicitly enable it temporarily when rendering their own entities.
	#- ACCELERATED: All entities will be rendered in the accelerated pipeline unless mods explicitly disable it temporarily when rendering their own entities.
	#Allowed Values: VANILLA, ACCELERATED
	default_pipeline = "ACCELERATED"
	#- CLIENT: Cached mesh will be stored on the client side (CPU), which will use less VRAM but take more time to upload to the server side (GPU) during rendering.
	#- SERVER: Cached mesh will be stored on the server side (GPU), which may speed up rendering but will use more VRAM to store the mesh.
	#Allowed Values: SERVER, CLIENT
	mesh_type = "SERVER"

#Accelerated Block Entity Rendering Settings
#Accelerated Block Entity Rendering uses GPU to cache and transform vertices while rendering block entities, instead of generating and transforming vertices every time the block entities are rendered in CPU.
[accelerated_block_entity_rendering]
	#- DISABLED: Disable accelerated block entity rendering.
	#- ENABLED: Enable accelerated block entity rendering.
	#Allowed Values: DISABLED, ENABLED
	feature_status = "DISABLED"
	#- VANILLA: Block entities will not be rendered into the accelerated pipeline unless mods explicitly enable it temporarily when rendering their own block entities.
	#- ACCELERATED: All block entities will be rendered in the accelerated pipeline unless mods explicitly disable it temporarily when rendering their own block entities.
	#Allowed Values: VANILLA, ACCELERATED
	default_pipeline = "ACCELERATED"
	#- CLIENT: Cached mesh will be stored on the client side (CPU), which will use less VRAM but take more time to upload to the server side (GPU) during rendering.
	#- SERVER: Cached mesh will be stored on the server side (GPU), which may speed up rendering but will use more VRAM to store the mesh.
	#Allowed Values: SERVER, CLIENT
	mesh_type = "SERVER"

#Accelerated Item Rendering Settings
#Accelerated Item Rendering uses GPU to cache and transform vertices while rendering item models, instead of generating and transforming vertices every time the item models are rendered in CPU.
[accelerated_item_rendering]
	#- DISABLED: Disable accelerated item rendering.
	#- ENABLED: Enable accelerated item rendering.
	#Allowed Values: DISABLED, ENABLED
	feature_status = "DISABLED"
	#- DISABLED: Accelerated Rendering will not bake mesh for quads provided by dynamic item models (something that is not SimpleBakedModel) unless mods explicitly enable it temporarily when rendering their own item models.
	#- ENABLED: Accelerated Rendering will bake mesh for all quads provided by dynamic item models (something that is not SimpleBakedModel) unless mods explicitly disable it temporarily when rendering their own item models, which will accelerate the rendering of these models but will crash if they keep allocating new quad data. (but who will?)
	#Allowed Values: DISABLED, ENABLED
	bake_mesh_for_quads = "DISABLED"
	#- VANILLA: Item models will not be rendered into the accelerated pipeline unless mods explicitly enable it temporarily when rendering their own item models.
	#- ACCELERATED: All item models will be rendered in the accelerated pipeline unless mods explicitly disable it temporarily when rendering their own item models.
	#Allowed Values: VANILLA, ACCELERATED
	default_pipeline = "ACCELERATED"
	#- CLIENT: Cached mesh will be stored on the client side (CPU), which will use less VRAM but take more time to upload to the server side (GPU) during rendering.
	#- SERVER: Cached mesh will be stored on the server side (GPU), which may speed up rendering but will use more VRAM to store the mesh.
	#Allowed Values: SERVER, CLIENT
	mesh_type = "SERVER"

#Accelerated Text Rendering Settings
#Accelerated Text Rendering uses GPU to cache and transform vertices while rendering text through BakedGlyph, instead of generating and transforming vertices every time the text are rendered in CPU.
[accelerated_text_rendering]
	#- DISABLED: Disable accelerated text rendering.
	#- ENABLED: Enable accelerated text rendering.
	#Allowed Values: DISABLED, ENABLED
	feature_status = "DISABLED"
	#- VANILLA: Text will not be rendered into the accelerated pipeline unless mods explicitly enable it temporarily when rendering their own text.
	#- ACCELERATED: All text will be rendered in the accelerated pipeline unless mods explicitly disable it temporarily when rendering their own text.
	#Allowed Values: VANILLA, ACCELERATED
	default_pipeline = "ACCELERATED"
	#- CLIENT: Cached mesh will be stored on the client side (CPU), which will use less VRAM but take more time to upload to the server side (GPU) during rendering.
	#- SERVER: Cached mesh will be stored on the server side (GPU), which may speed up rendering but will use more VRAM to store the mesh.
	#Allowed Values: SERVER, CLIENT
	mesh_type = "SERVER"

#Simple Orientation Face Culling Settings
#Simple Orientation face culling uses an compute shader before the draw call to discard faces that is not visible on screen by checking if it is facing to the screen using a determinant of 3 * 3 matrix.
[orientation_culling]
	#- DISABLED: Disable simple orientation face culling.
	#- ENABLED: Enable simple orientation face culling.
	#Allowed Values: DISABLED, ENABLED
	feature_Status = "DISABLED"
	#- DISABLED: Faces will not be culled unless mods explicitly enable it temporarily when rendering their own faces.
	#- ENABLED: All faces will be culled unless mods explicitly disable it temporarily when rendering their own faces.
	#Allowed Values: DISABLED, ENABLED
	default_culling = "DISABLED"
	#- DISABLED: Simple orientation face culling will not cull entities that are not declared as "cullable".
	#- ENABLED: Simple orientation face culling will cull all entities even if they are not declared as "cullable".
	#Allowed Values: DISABLED, ENABLED
	ignore_cull_state = "DISABLED"

#Iris Compatibility Settings
#Iris Compatibility Settings allows Accelerated Rendering to work correctly with Iris.
[iris_compatibility]
	#- DISABLED: Accelerated Rendering will be incompatible with Iris and cause visual glitches when working with Iris.
	#- ENABLED: Accelerated Rendering will use compute shaders that fits Iris's vertex formats, which make it compatible with Iris.
	#Allowed Values: DISABLED, ENABLED
	feature_status = "ENABLED"
	#- DISABLED: Simple Orientation culling will not work with Iris because the culling shader is for vanilla's vertex formats.
	#- ENABLED: Simple Orientation culling will use another culling shader that fits iris's vertex format, which make it compatible with Iris.
	#Allowed Values: DISABLED, ENABLED
	orientation_culling_compatibility = "ENABLED"
	#- DISABLED: Entities will not be culled when they are rendered as shadows unless mods explicitly enable it temporarily when rendering their own shadows. Which reduce FPS due to redundant faces.
	#- ENABLED: Entities will be culled when they are rendered as shadows unless mods explicitly disable it temporarily when rendering their own shadows. Redundant faces will be culled and improve FPS, but it may cause incorrect shadows.
	#Allowed Values: DISABLED, ENABLED
	shadow_culling = "ENABLED"
	#- DISABLED: renderEntity called from Iris will not render entity into the accelerated pipeline.
	#- ENABLED: renderEntity called from Iris will render entity into the accelerated pipeline.
	#Allowed Values: DISABLED, ENABLED
	entities_compatibility = "ENABLED"
	#- DISABLED: Extra information in vertices provided by Iris will not be included or calculated in the accelerated pipeline unless mods explicitly enable it temporarily when rendering their own faces, which may cause visual glitches or incorrect rendering.
	#- ENABLED: Extra information in vertices provided by Iris will be included and calculated in the accelerated pipeline by a compute shader unless mods explicitly disable it temporarily when rendering their own faces.
	#Allowed Values: DISABLED, ENABLED
	polygon_processing = "ENABLED"
	#- DISABLED: Accelerated Rendering will use slow but safe "instanceof" operation in checking wrapped RenderType created by Iris.
	#- ENABlED: Accelerated Rendering will use extension interface in checking wrapped RenderType created by Iris, which is faster but unsafe if other mods also implemented "WrappableRenderType". (but who will?)
	#Allowed Values: DISABLED, ENABLED
	fast_render_type_check = "ENABLED"
